<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CaptionRegistered" xml:space="preserve">
    <value>Зарегестрированный</value>
  </data>
  <data name="CaptionWarning" xml:space="preserve">
    <value>Предупреждение</value>
  </data>
  <data name="CodeNotValid" xml:space="preserve">
    <value>Секретный код не действителен</value>
  </data>
  <data name="CodePasswordNotCorrect" xml:space="preserve">
    <value>Секретный код или пароль указан неверно.</value>
  </data>
  <data name="EmailIncorrect" xml:space="preserve">
    <value>Электронная почта неверна. Правильный e-mail: example@mail.com</value>
  </data>
  <data name="EmailSentCode" xml:space="preserve">
    <value>На вашу электронную почту выслан секретный код.</value>
  </data>
  <data name="FunctionNotImplemented" xml:space="preserve">
    <value>Функция не реализована</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Группа #{0} {1} - {2} отметка:{3}</value>
  </data>
  <data name="GroupNotLeastThreeSymbols" xml:space="preserve">
    <value>Имя группы может содержать не менее 3 букв и цифр, и также разветвители '-', '_', ' '</value>
  </data>
  <data name="InitializationNotImplementedDM" xml:space="preserve">
    <value>Механизм инициализации  не реализован для модели данных.</value>
  </data>
  <data name="MiddleNameOnlyLettersToThirty" xml:space="preserve">
    <value>Отчество может содержать только буквы (от 1 до 30)</value>
  </data>
  <data name="NameOnlyLettersToThirty" xml:space="preserve">
    <value>Имя может содержать только буквы (от 1 до 30)</value>
  </data>
  <data name="NewPasswordNotValid" xml:space="preserve">
    <value>Новый пароль не действителен</value>
  </data>
  <data name="NewTestDateYourTeacher" xml:space="preserve">
    <value>У вас есть новый тест - {0} \n Дата тестирование:  {1} \n Ваш учитель: {2}</value>
  </data>
  <data name="NotTestMode" xml:space="preserve">
    <value>Вы не выбрали тестовый режим! Установленный по умолчанию тест - Обучение.</value>
  </data>
  <data name="PasswordChanged" xml:space="preserve">
    <value>Пароль успешно изменен.</value>
  </data>
  <data name="PasswordNotLeastSixSymbols" xml:space="preserve">
    <value>Пароль должен содержать не менее 6 символов</value>
  </data>
  <data name="PasswordNotValid" xml:space="preserve">
    <value>Пароль не действителен</value>
  </data>
  <data name="QuestionNotFound" xml:space="preserve">
    <value>Вопрос не найден.</value>
  </data>
  <data name="RegisterSuccessfull" xml:space="preserve">
    <value>Регистрация прошла успешно, можете войти сейчас.</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Роль # {0} {1} - {2}</value>
  </data>
  <data name="StudentNotGroup" xml:space="preserve">
    <value>Студент должен иметь группу!</value>
  </data>
  <data name="SurnameOnlyLettersToThirty" xml:space="preserve">
    <value>Фамилия может содержать только буквы (от 1 до 30)</value>
  </data>
  <data name="TestEnd" xml:space="preserve">
    <value>Тест завершен.</value>
  </data>
  <data name="TestStatistic" xml:space="preserve">
    <value>Тест '{0}' из  '{1}'\n  {2}\n Студент: {3} c {4}\n Верные ответы: {5}/{6}\n Результат: {7}</value>
  </data>
  <data name="TimeEnd" xml:space="preserve">
    <value>Время на прохождение теста закончилось. </value>
  </data>
  <data name="User" xml:space="preserve">
    <value>Пользователь #{0}, имя пользователя: {1} почта: {2}\n Роль: {3}</value>
  </data>
  <data name="UserAlreadyToken" xml:space="preserve">
    <value>Такое имя пользователя уже существует, попробуйте другое.</value>
  </data>
  <data name="UserLeastFourSymbols" xml:space="preserve">
    <value>Имя пользователя должно содержать не менее 4-х символов (буквы, цифры и '-', '.', '_')</value>
  </data>
  <data name="UserNotCorrect" xml:space="preserve">
    <value>Имя пользователя неверно.</value>
  </data>
  <data name="UserNotRegistered" xml:space="preserve">
    <value>Имя пользователя не зарегистрировано в приложении.</value>
  </data>
  <data name="UserNotValid" xml:space="preserve">
    <value>Имя пользователя не действительно</value>
  </data>
  <data name="UserPasswordNotCorrect" xml:space="preserve">
    <value>Имя пользователя или пароль указан неверно.</value>
  </data>
  <data name="UserPasswordNotFound" xml:space="preserve">
    <value>Имя пользователя и пароль не найдены.</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Предупреждение</value>
  </data>
</root>