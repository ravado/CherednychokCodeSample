//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.17929
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ResourcesLibrary {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ResourcesLibrary.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Registered.
        /// </summary>
        public static string CaptionRegistered {
            get {
                return ResourceManager.GetString("CaptionRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string CaptionWarning {
            get {
                return ResourceManager.GetString("CaptionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret code is not valid.
        /// </summary>
        public static string CodeNotValid {
            get {
                return ResourceManager.GetString("CodeNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Secret code or new password is not correct..
        /// </summary>
        public static string CodePasswordNotCorrect {
            get {
                return ResourceManager.GetString("CodePasswordNotCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Email is incorrect. User correct email: example@mail.com.
        /// </summary>
        public static string EmailIncorrect {
            get {
                return ResourceManager.GetString("EmailIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на To your email sent a secret code..
        /// </summary>
        public static string EmailSentCode {
            get {
                return ResourceManager.GetString("EmailSentCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Function not implemented.
        /// </summary>
        public static string FunctionNotImplemented {
            get {
                return ResourceManager.GetString("FunctionNotImplemented", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Group #{0} {1} - {2} canceled mark: {3}.
        /// </summary>
        public static string Group {
            get {
                return ResourceManager.GetString("Group", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Group name can contain minimum 3 letters and numbers, or such splitters as  &apos;-&apos;, &apos;_&apos;, &apos; &apos;.
        /// </summary>
        public static string GroupNotLeastThreeSymbols {
            get {
                return ResourceManager.GetString("GroupNotLeastThreeSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Initialization mechanism is not implemented for the data model..
        /// </summary>
        public static string InitializationNotImplementedDM {
            get {
                return ResourceManager.GetString("InitializationNotImplementedDM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на MiddleName can contain only letters (from 1 to 30).
        /// </summary>
        public static string MiddleNameOnlyLettersToThirty {
            get {
                return ResourceManager.GetString("MiddleNameOnlyLettersToThirty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Name can contain only letters (from 1 to 30).
        /// </summary>
        public static string NameOnlyLettersToThirty {
            get {
                return ResourceManager.GetString("NameOnlyLettersToThirty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на New Password is not valid.
        /// </summary>
        public static string NewPasswordNotValid {
            get {
                return ResourceManager.GetString("NewPasswordNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You have new test - {0}\n Testing date is {1}\n Your teacher is {2}.
        /// </summary>
        public static string NewTestDateYourTeacher {
            get {
                return ResourceManager.GetString("NewTestDateYourTeacher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на You do not select the test mode! Set to the default test - Learning..
        /// </summary>
        public static string NotTestMode {
            get {
                return ResourceManager.GetString("NotTestMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password successfully changed..
        /// </summary>
        public static string PasswordChanged {
            get {
                return ResourceManager.GetString("PasswordChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password must contain at least 6 symbols.
        /// </summary>
        public static string PasswordNotLeastSixSymbols {
            get {
                return ResourceManager.GetString("PasswordNotLeastSixSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Password is not valid.
        /// </summary>
        public static string PasswordNotValid {
            get {
                return ResourceManager.GetString("PasswordNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test question not found..
        /// </summary>
        public static string QuestionNotFound {
            get {
                return ResourceManager.GetString("QuestionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Register was successfull, please login now..
        /// </summary>
        public static string RegisterSuccessfull {
            get {
                return ResourceManager.GetString("RegisterSuccessfull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Role #{0} {1} - {2}.
        /// </summary>
        public static string Role {
            get {
                return ResourceManager.GetString("Role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Student must have a group!.
        /// </summary>
        public static string StudentNotGroup {
            get {
                return ResourceManager.GetString("StudentNotGroup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Surname can contain only letters (from 1 to 30).
        /// </summary>
        public static string SurnameOnlyLettersToThirty {
            get {
                return ResourceManager.GetString("SurnameOnlyLettersToThirty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The test is complete..
        /// </summary>
        public static string TestEnd {
            get {
                return ResourceManager.GetString("TestEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Test &apos;{0}&apos; of &apos;{1}&apos;\n  {2}\n Student: {3} from {4}\n Correct answers: {5}/{6}\n Result: {7}.
        /// </summary>
        public static string TestStatistic {
            get {
                return ResourceManager.GetString("TestStatistic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time for completion of the test is over..
        /// </summary>
        public static string TimeEnd {
            get {
                return ResourceManager.GetString("TimeEnd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User #{0}, username: {1} email: {2}\n Role: {3}.
        /// </summary>
        public static string User {
            get {
                return ResourceManager.GetString("User", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Such username already token, try another..
        /// </summary>
        public static string UserAlreadyToken {
            get {
                return ResourceManager.GetString("UserAlreadyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username must contain at least 4 symbols (letters, numbers and &apos;-&apos;, &apos;_&apos;, &apos;.&apos;).
        /// </summary>
        public static string UserLeastFourSymbols {
            get {
                return ResourceManager.GetString("UserLeastFourSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username is not correct..
        /// </summary>
        public static string UserNotCorrect {
            get {
                return ResourceManager.GetString("UserNotCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This Username is not registered in application..
        /// </summary>
        public static string UserNotRegistered {
            get {
                return ResourceManager.GetString("UserNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username is not valid.
        /// </summary>
        public static string UserNotValid {
            get {
                return ResourceManager.GetString("UserNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Username or Password is not correct..
        /// </summary>
        public static string UserPasswordNotCorrect {
            get {
                return ResourceManager.GetString("UserPasswordNotCorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на This bunch Username and Password not found..
        /// </summary>
        public static string UserPasswordNotFound {
            get {
                return ResourceManager.GetString("UserPasswordNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
