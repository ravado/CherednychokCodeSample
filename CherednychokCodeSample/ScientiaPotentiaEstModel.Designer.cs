//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Answers_Questions", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Question), "Answers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Answer), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_Answers", "Answers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CherednychokCodeSample.Answer), "TestAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.TestAnswer), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Assign_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Group), "Assign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Assign), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Assign_Moduls", "Moduls", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Modul), "Assign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Assign), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Assign_Profiles", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Profile), "Assign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Assign), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Assign_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.User), "Assign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Assign), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Users_Groups", "Groups", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CherednychokCodeSample.Group), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.User), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Moduls_Subjects", "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Subject), "Moduls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Modul), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Questions_Moduls", "Moduls", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Modul), "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Question), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Tests_Moduls", "Moduls", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Modul), "Tests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Test), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_RatingScale_Profiles", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Profile), "RatingScale", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.RatingScale), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Tests_Profiles", "Profiles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Profile), "Tests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Test), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Questions", "Questions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Question), "TestQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.TestQuestion), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_TestQuestions", "TestQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.TestQuestion), "TestAnswers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.TestAnswer), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Tests", "Tests", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.Test), "TestQuestions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.TestQuestion), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Tests_Student", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.User), "Tests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Test), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "FK_Tests_Teacher", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CherednychokCodeSample.User), "Tests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Test), true)]
[assembly: EdmRelationshipAttribute("ScientiaPotentiaEstModel", "UsersRoles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.Role), "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CherednychokCodeSample.User))]

#endregion

namespace CherednychokCodeSample
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ScientiaPotentiaEstEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ScientiaPotentiaEstEntities object using the connection string found in the 'ScientiaPotentiaEstEntities' section of the application configuration file.
        /// </summary>
        public ScientiaPotentiaEstEntities() : base("name=ScientiaPotentiaEstEntities", "ScientiaPotentiaEstEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScientiaPotentiaEstEntities object.
        /// </summary>
        public ScientiaPotentiaEstEntities(string connectionString) : base(connectionString, "ScientiaPotentiaEstEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ScientiaPotentiaEstEntities object.
        /// </summary>
        public ScientiaPotentiaEstEntities(EntityConnection connection) : base(connection, "ScientiaPotentiaEstEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Answer> Answers
        {
            get
            {
                if ((_Answers == null))
                {
                    _Answers = base.CreateObjectSet<Answer>("Answers");
                }
                return _Answers;
            }
        }
        private ObjectSet<Answer> _Answers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assign> Assign
        {
            get
            {
                if ((_Assign == null))
                {
                    _Assign = base.CreateObjectSet<Assign>("Assign");
                }
                return _Assign;
            }
        }
        private ObjectSet<Assign> _Assign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Groups
        {
            get
            {
                if ((_Groups == null))
                {
                    _Groups = base.CreateObjectSet<Group>("Groups");
                }
                return _Groups;
            }
        }
        private ObjectSet<Group> _Groups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Modul> Moduls
        {
            get
            {
                if ((_Moduls == null))
                {
                    _Moduls = base.CreateObjectSet<Modul>("Moduls");
                }
                return _Moduls;
            }
        }
        private ObjectSet<Modul> _Moduls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profiles
        {
            get
            {
                if ((_Profiles == null))
                {
                    _Profiles = base.CreateObjectSet<Profile>("Profiles");
                }
                return _Profiles;
            }
        }
        private ObjectSet<Profile> _Profiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Question> Questions
        {
            get
            {
                if ((_Questions == null))
                {
                    _Questions = base.CreateObjectSet<Question>("Questions");
                }
                return _Questions;
            }
        }
        private ObjectSet<Question> _Questions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RatingScale> RatingScales
        {
            get
            {
                if ((_RatingScales == null))
                {
                    _RatingScales = base.CreateObjectSet<RatingScale>("RatingScales");
                }
                return _RatingScales;
            }
        }
        private ObjectSet<RatingScale> _RatingScales;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Subject> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subject>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subject> _Subjects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestAnswer> TestAnswers
        {
            get
            {
                if ((_TestAnswers == null))
                {
                    _TestAnswers = base.CreateObjectSet<TestAnswer>("TestAnswers");
                }
                return _TestAnswers;
            }
        }
        private ObjectSet<TestAnswer> _TestAnswers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestQuestion> TestQuestions
        {
            get
            {
                if ((_TestQuestions == null))
                {
                    _TestQuestions = base.CreateObjectSet<TestQuestion>("TestQuestions");
                }
                return _TestQuestions;
            }
        }
        private ObjectSet<TestQuestion> _TestQuestions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Test> Tests
        {
            get
            {
                if ((_Tests == null))
                {
                    _Tests = base.CreateObjectSet<Test>("Tests");
                }
                return _Tests;
            }
        }
        private ObjectSet<Test> _Tests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Answers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAnswers(Answer answer)
        {
            base.AddObject("Answers", answer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssign(Assign assign)
        {
            base.AddObject("Assign", assign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Groups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroups(Group group)
        {
            base.AddObject("Groups", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Moduls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModuls(Modul modul)
        {
            base.AddObject("Moduls", modul);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfiles(Profile profile)
        {
            base.AddObject("Profiles", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Questions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuestions(Question question)
        {
            base.AddObject("Questions", question);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RatingScales EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRatingScales(RatingScale ratingScale)
        {
            base.AddObject("RatingScales", ratingScale);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Subjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubjects(Subject subject)
        {
            base.AddObject("Subjects", subject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestAnswers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestAnswers(TestAnswer testAnswer)
        {
            base.AddObject("TestAnswers", testAnswer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestQuestions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestQuestions(TestQuestion testQuestion)
        {
            base.AddObject("TestQuestions", testQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTests(Test test)
        {
            base.AddObject("Tests", test);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Answer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Answer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Answer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="ordinalNumber">Initial value of the OrdinalNumber property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="significance">Initial value of the Significance property.</param>
        /// <param name="group">Initial value of the Group property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        public static Answer CreateAnswer(global::System.Int32 id, global::System.Int32 questionID, global::System.Int32 ordinalNumber, global::System.String text, global::System.Int32 significance, global::System.String group, global::System.Int32 canceledMark)
        {
            Answer answer = new Answer();
            answer.ID = id;
            answer.QuestionID = questionID;
            answer.OrdinalNumber = ordinalNumber;
            answer.Text = text;
            answer.Significance = significance;
            answer.Group = group;
            answer.CanceledMark = canceledMark;
            return answer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrdinalNumber
        {
            get
            {
                return _OrdinalNumber;
            }
            set
            {
                OnOrdinalNumberChanging(value);
                ReportPropertyChanging("OrdinalNumber");
                _OrdinalNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrdinalNumber");
                OnOrdinalNumberChanged();
            }
        }
        private global::System.Int32 _OrdinalNumber;
        partial void OnOrdinalNumberChanging(global::System.Int32 value);
        partial void OnOrdinalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Significance
        {
            get
            {
                return _Significance;
            }
            set
            {
                OnSignificanceChanging(value);
                ReportPropertyChanging("Significance");
                _Significance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Significance");
                OnSignificanceChanged();
            }
        }
        private global::System.Int32 _Significance;
        partial void OnSignificanceChanging(global::System.Int32 value);
        partial void OnSignificanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Group
        {
            get
            {
                return _Group;
            }
            set
            {
                OnGroupChanging(value);
                ReportPropertyChanging("Group");
                _Group = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Group");
                OnGroupChanged();
            }
        }
        private global::System.String _Group;
        partial void OnGroupChanging(global::System.String value);
        partial void OnGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Answers_Questions", "Questions")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_Answers", "TestAnswers")]
        public EntityCollection<TestAnswer> TestAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAnswer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "TestAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAnswer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "TestAnswers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Assign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assign object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="modulID">Initial value of the ModulID property.</param>
        public static Assign CreateAssign(global::System.Int32 id, global::System.Int32 groupID, global::System.Int32 teacherID, global::System.Int32 profileID, global::System.Int32 modulID)
        {
            Assign assign = new Assign();
            assign.ID = id;
            assign.GroupID = groupID;
            assign.TeacherID = teacherID;
            assign.ProfileID = profileID;
            assign.ModulID = modulID;
            return assign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Int32 _GroupID;
        partial void OnGroupIDChanging(global::System.Int32 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int32 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int32 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModulID
        {
            get
            {
                return _ModulID;
            }
            set
            {
                OnModulIDChanging(value);
                ReportPropertyChanging("ModulID");
                _ModulID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModulID");
                OnModulIDChanged();
            }
        }
        private global::System.Int32 _ModulID;
        partial void OnModulIDChanging(global::System.Int32 value);
        partial void OnModulIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestDate
        {
            get
            {
                return _TestDate;
            }
            set
            {
                OnTestDateChanging(value);
                ReportPropertyChanging("TestDate");
                _TestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDate");
                OnTestDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestDate;
        partial void OnTestDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTestDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Groups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Moduls", "Moduls")]
        public Modul Modul
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Moduls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Moduls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modul> ModulReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Moduls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Moduls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Profiles", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Profiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Assign_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Assign_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Assign_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ScientiaPotentiaEstModel.FK_Assign_Users", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        public static Group CreateGroup(global::System.Int32 id, global::System.String name, global::System.Int32 canceledMark)
        {
            Group group = new Group();
            group.ID = id;
            group.Name = name;
            group.CanceledMark = canceledMark;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Groups", "Assign")]
        public EntityCollection<Assign> Assigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Assign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Groups", "Assign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Users_Groups", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ScientiaPotentiaEstModel.FK_Users_Groups", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ScientiaPotentiaEstModel.FK_Users_Groups", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Modul")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modul : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Modul object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        /// <param name="subjectID">Initial value of the SubjectID property.</param>
        public static Modul CreateModul(global::System.Int32 id, global::System.String name, global::System.Int32 canceledMark, global::System.Int32 subjectID)
        {
            Modul modul = new Modul();
            modul.ID = id;
            modul.Name = name;
            modul.CanceledMark = canceledMark;
            modul.SubjectID = subjectID;
            return modul;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectID
        {
            get
            {
                return _SubjectID;
            }
            set
            {
                OnSubjectIDChanging(value);
                ReportPropertyChanging("SubjectID");
                _SubjectID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectID");
                OnSubjectIDChanged();
            }
        }
        private global::System.Int32 _SubjectID;
        partial void OnSubjectIDChanging(global::System.Int32 value);
        partial void OnSubjectIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Moduls", "Assign")]
        public EntityCollection<Assign> Assign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Assign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Moduls", "Assign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Moduls_Subjects", "Subjects")]
        public Subject Subject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Subjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Subjects").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subject> SubjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subject>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subject>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Subjects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Questions_Moduls", "Questions")]
        public EntityCollection<Question> Questions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Question>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Question>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Moduls", "Tests")]
        public EntityCollection<Test> Tests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Tests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Tests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        /// <param name="timeLimit">Initial value of the TimeLimit property.</param>
        /// <param name="shuffleQuestions">Initial value of the ShuffleQuestions property.</param>
        /// <param name="shuffleAnswers">Initial value of the ShuffleAnswers property.</param>
        /// <param name="questionsCount">Initial value of the QuestionsCount property.</param>
        /// <param name="markType">Initial value of the MarkType property.</param>
        public static Profile CreateProfile(global::System.Int32 id, global::System.String name, global::System.Int32 canceledMark, global::System.Int32 timeLimit, global::System.Int32 shuffleQuestions, global::System.Int32 shuffleAnswers, global::System.Int32 questionsCount, global::System.Int32 markType)
        {
            Profile profile = new Profile();
            profile.ID = id;
            profile.Name = name;
            profile.CanceledMark = canceledMark;
            profile.TimeLimit = timeLimit;
            profile.ShuffleQuestions = shuffleQuestions;
            profile.ShuffleAnswers = shuffleAnswers;
            profile.QuestionsCount = questionsCount;
            profile.MarkType = markType;
            return profile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TimeLimit
        {
            get
            {
                return _TimeLimit;
            }
            set
            {
                OnTimeLimitChanging(value);
                ReportPropertyChanging("TimeLimit");
                _TimeLimit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeLimit");
                OnTimeLimitChanged();
            }
        }
        private global::System.Int32 _TimeLimit;
        partial void OnTimeLimitChanging(global::System.Int32 value);
        partial void OnTimeLimitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShuffleQuestions
        {
            get
            {
                return _ShuffleQuestions;
            }
            set
            {
                OnShuffleQuestionsChanging(value);
                ReportPropertyChanging("ShuffleQuestions");
                _ShuffleQuestions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShuffleQuestions");
                OnShuffleQuestionsChanged();
            }
        }
        private global::System.Int32 _ShuffleQuestions;
        partial void OnShuffleQuestionsChanging(global::System.Int32 value);
        partial void OnShuffleQuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShuffleAnswers
        {
            get
            {
                return _ShuffleAnswers;
            }
            set
            {
                OnShuffleAnswersChanging(value);
                ReportPropertyChanging("ShuffleAnswers");
                _ShuffleAnswers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShuffleAnswers");
                OnShuffleAnswersChanged();
            }
        }
        private global::System.Int32 _ShuffleAnswers;
        partial void OnShuffleAnswersChanging(global::System.Int32 value);
        partial void OnShuffleAnswersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionsCount
        {
            get
            {
                return _QuestionsCount;
            }
            set
            {
                OnQuestionsCountChanging(value);
                ReportPropertyChanging("QuestionsCount");
                _QuestionsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionsCount");
                OnQuestionsCountChanged();
            }
        }
        private global::System.Int32 _QuestionsCount;
        partial void OnQuestionsCountChanging(global::System.Int32 value);
        partial void OnQuestionsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MarkType
        {
            get
            {
                return _MarkType;
            }
            set
            {
                OnMarkTypeChanging(value);
                ReportPropertyChanging("MarkType");
                _MarkType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MarkType");
                OnMarkTypeChanged();
            }
        }
        private global::System.Int32 _MarkType;
        partial void OnMarkTypeChanging(global::System.Int32 value);
        partial void OnMarkTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Profiles", "Assign")]
        public EntityCollection<Assign> Assigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Assign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Profiles", "Assign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_RatingScale_Profiles", "RatingScale")]
        public EntityCollection<RatingScale> RatingScales
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RatingScale>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "RatingScale");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RatingScale>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "RatingScale", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Profiles", "Tests")]
        public EntityCollection<Test> Tests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Tests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Tests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Question")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Question : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Question object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="ordinalNumber">Initial value of the OrdinalNumber property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="significance">Initial value of the Significance property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="modulID">Initial value of the ModulID property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        /// <param name="explanation">Initial value of the Explanation property.</param>
        public static Question CreateQuestion(global::System.Int32 id, global::System.Int32 ordinalNumber, global::System.String text, global::System.Int32 significance, global::System.Int32 type, global::System.Int32 modulID, global::System.Int32 canceledMark, global::System.String explanation)
        {
            Question question = new Question();
            question.ID = id;
            question.OrdinalNumber = ordinalNumber;
            question.Text = text;
            question.Significance = significance;
            question.Type = type;
            question.ModulID = modulID;
            question.CanceledMark = canceledMark;
            question.Explanation = explanation;
            return question;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrdinalNumber
        {
            get
            {
                return _OrdinalNumber;
            }
            set
            {
                OnOrdinalNumberChanging(value);
                ReportPropertyChanging("OrdinalNumber");
                _OrdinalNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrdinalNumber");
                OnOrdinalNumberChanged();
            }
        }
        private global::System.Int32 _OrdinalNumber;
        partial void OnOrdinalNumberChanging(global::System.Int32 value);
        partial void OnOrdinalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Significance
        {
            get
            {
                return _Significance;
            }
            set
            {
                OnSignificanceChanging(value);
                ReportPropertyChanging("Significance");
                _Significance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Significance");
                OnSignificanceChanged();
            }
        }
        private global::System.Int32 _Significance;
        partial void OnSignificanceChanging(global::System.Int32 value);
        partial void OnSignificanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModulID
        {
            get
            {
                return _ModulID;
            }
            set
            {
                OnModulIDChanging(value);
                ReportPropertyChanging("ModulID");
                _ModulID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModulID");
                OnModulIDChanged();
            }
        }
        private global::System.Int32 _ModulID;
        partial void OnModulIDChanging(global::System.Int32 value);
        partial void OnModulIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Explanation
        {
            get
            {
                return _Explanation;
            }
            set
            {
                OnExplanationChanging(value);
                ReportPropertyChanging("Explanation");
                _Explanation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Explanation");
                OnExplanationChanged();
            }
        }
        private global::System.String _Explanation;
        partial void OnExplanationChanging(global::System.String value);
        partial void OnExplanationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Answers_Questions", "Answers")]
        public EntityCollection<Answer> Answers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Answer>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Answers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Answer>("ScientiaPotentiaEstModel.FK_Answers_Questions", "Answers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Questions_Moduls", "Moduls")]
        public Modul Modul
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Moduls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Moduls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modul> ModulReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Moduls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Questions_Moduls", "Moduls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Questions", "TestQuestions")]
        public EntityCollection<TestQuestion> TestQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestQuestion>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "TestQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestQuestion>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "TestQuestions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="RatingScale")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RatingScale : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RatingScale object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        /// <param name="lowBound">Initial value of the LowBound property.</param>
        public static RatingScale CreateRatingScale(global::System.Int32 id, global::System.Int32 profileID, global::System.String text, global::System.Decimal lowBound)
        {
            RatingScale ratingScale = new RatingScale();
            ratingScale.ID = id;
            ratingScale.ProfileID = profileID;
            ratingScale.Text = text;
            ratingScale.LowBound = lowBound;
            return ratingScale;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int32 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int32 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LowBound
        {
            get
            {
                return _LowBound;
            }
            set
            {
                OnLowBoundChanging(value);
                ReportPropertyChanging("LowBound");
                _LowBound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowBound");
                OnLowBoundChanged();
            }
        }
        private global::System.Decimal _LowBound;
        partial void OnLowBoundChanging(global::System.Decimal value);
        partial void OnLowBoundChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_RatingScale_Profiles", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_RatingScale_Profiles", "Profiles", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="role1">Initial value of the Role1 property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        public static Role CreateRole(global::System.Int32 id, global::System.Int32 role1, global::System.String name, global::System.String description, global::System.Int32 canceledMark)
        {
            Role role = new Role();
            role.ID = id;
            role.Role1 = role1;
            role.Name = name;
            role.Description = description;
            role.CanceledMark = canceledMark;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Role1
        {
            get
            {
                return _Role1;
            }
            set
            {
                OnRole1Changing(value);
                ReportPropertyChanging("Role1");
                _Role1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Role1");
                OnRole1Changed();
            }
        }
        private global::System.Int32 _Role1;
        partial void OnRole1Changing(global::System.Int32 value);
        partial void OnRole1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "UsersRoles", "Users")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("ScientiaPotentiaEstModel.UsersRoles", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("ScientiaPotentiaEstModel.UsersRoles", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Subject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Subject object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        public static Subject CreateSubject(global::System.Int32 id, global::System.String name, global::System.Int32 canceledMark)
        {
            Subject subject = new Subject();
            subject.ID = id;
            subject.Name = name;
            subject.CanceledMark = canceledMark;
            return subject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Moduls_Subjects", "Moduls")]
        public EntityCollection<Modul> Moduls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Modul>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Moduls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Modul>("ScientiaPotentiaEstModel.FK_Moduls_Subjects", "Moduls", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="Test")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Test : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Test object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="modulID">Initial value of the ModulID property.</param>
        /// <param name="studentID">Initial value of the StudentID property.</param>
        /// <param name="teacherID">Initial value of the TeacherID property.</param>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="mode">Initial value of the Mode property.</param>
        /// <param name="duration">Initial value of the Duration property.</param>
        /// <param name="rating">Initial value of the Rating property.</param>
        /// <param name="totalRating">Initial value of the TotalRating property.</param>
        /// <param name="totalQuestions">Initial value of the TotalQuestions property.</param>
        /// <param name="totalAnswers">Initial value of the TotalAnswers property.</param>
        public static Test CreateTest(global::System.Int32 id, global::System.Int32 modulID, global::System.Int32 studentID, global::System.Int32 teacherID, global::System.Int32 profileID, global::System.Int32 mode, global::System.Int64 duration, global::System.Decimal rating, global::System.Decimal totalRating, global::System.Int32 totalQuestions, global::System.Int32 totalAnswers)
        {
            Test test = new Test();
            test.ID = id;
            test.ModulID = modulID;
            test.StudentID = studentID;
            test.TeacherID = teacherID;
            test.ProfileID = profileID;
            test.Mode = mode;
            test.Duration = duration;
            test.Rating = rating;
            test.TotalRating = totalRating;
            test.TotalQuestions = totalQuestions;
            test.TotalAnswers = totalAnswers;
            return test;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModulID
        {
            get
            {
                return _ModulID;
            }
            set
            {
                OnModulIDChanging(value);
                ReportPropertyChanging("ModulID");
                _ModulID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModulID");
                OnModulIDChanged();
            }
        }
        private global::System.Int32 _ModulID;
        partial void OnModulIDChanging(global::System.Int32 value);
        partial void OnModulIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StudentID
        {
            get
            {
                return _StudentID;
            }
            set
            {
                OnStudentIDChanging(value);
                ReportPropertyChanging("StudentID");
                _StudentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudentID");
                OnStudentIDChanged();
            }
        }
        private global::System.Int32 _StudentID;
        partial void OnStudentIDChanging(global::System.Int32 value);
        partial void OnStudentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TeacherID
        {
            get
            {
                return _TeacherID;
            }
            set
            {
                OnTeacherIDChanging(value);
                ReportPropertyChanging("TeacherID");
                _TeacherID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TeacherID");
                OnTeacherIDChanged();
            }
        }
        private global::System.Int32 _TeacherID;
        partial void OnTeacherIDChanging(global::System.Int32 value);
        partial void OnTeacherIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                OnProfileIDChanging(value);
                ReportPropertyChanging("ProfileID");
                _ProfileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileID");
                OnProfileIDChanged();
            }
        }
        private global::System.Int32 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int32 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mode
        {
            get
            {
                return _Mode;
            }
            set
            {
                OnModeChanging(value);
                ReportPropertyChanging("Mode");
                _Mode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mode");
                OnModeChanged();
            }
        }
        private global::System.Int32 _Mode;
        partial void OnModeChanging(global::System.Int32 value);
        partial void OnModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Duration
        {
            get
            {
                return _Duration;
            }
            set
            {
                OnDurationChanging(value);
                ReportPropertyChanging("Duration");
                _Duration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Duration");
                OnDurationChanged();
            }
        }
        private global::System.Int64 _Duration;
        partial void OnDurationChanging(global::System.Int64 value);
        partial void OnDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Decimal _Rating;
        partial void OnRatingChanging(global::System.Decimal value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalRating
        {
            get
            {
                return _TotalRating;
            }
            set
            {
                OnTotalRatingChanging(value);
                ReportPropertyChanging("TotalRating");
                _TotalRating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalRating");
                OnTotalRatingChanged();
            }
        }
        private global::System.Decimal _TotalRating;
        partial void OnTotalRatingChanging(global::System.Decimal value);
        partial void OnTotalRatingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalQuestions
        {
            get
            {
                return _TotalQuestions;
            }
            set
            {
                OnTotalQuestionsChanging(value);
                ReportPropertyChanging("TotalQuestions");
                _TotalQuestions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalQuestions");
                OnTotalQuestionsChanged();
            }
        }
        private global::System.Int32 _TotalQuestions;
        partial void OnTotalQuestionsChanging(global::System.Int32 value);
        partial void OnTotalQuestionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalAnswers
        {
            get
            {
                return _TotalAnswers;
            }
            set
            {
                OnTotalAnswersChanging(value);
                ReportPropertyChanging("TotalAnswers");
                _TotalAnswers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalAnswers");
                OnTotalAnswersChanged();
            }
        }
        private global::System.Int32 _TotalAnswers;
        partial void OnTotalAnswersChanging(global::System.Int32 value);
        partial void OnTotalAnswersChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Moduls", "Moduls")]
        public Modul Modul
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Moduls").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Moduls").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modul> ModulReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Moduls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modul>("ScientiaPotentiaEstModel.FK_Tests_Moduls", "Moduls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Profiles", "Profiles")]
        public Profile Profile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Profiles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Profiles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Profile> ProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Profiles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Profile>("ScientiaPotentiaEstModel.FK_Tests_Profiles", "Profiles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Tests", "TestQuestions")]
        public EntityCollection<TestQuestion> TestQuestions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestQuestion>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "TestQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestQuestion>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "TestQuestions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Student", "Users")]
        public User Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Student", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Student", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Student", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Student", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Teacher", "Users")]
        public User Teacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> TeacherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="TestAnswer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestAnswer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestAnswer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="testQuestionID">Initial value of the TestQuestionID property.</param>
        /// <param name="ordinalNumber">Initial value of the OrdinalNumber property.</param>
        /// <param name="text">Initial value of the Text property.</param>
        public static TestAnswer CreateTestAnswer(global::System.Int32 id, global::System.Int32 testQuestionID, global::System.Int32 ordinalNumber, global::System.String text)
        {
            TestAnswer testAnswer = new TestAnswer();
            testAnswer.ID = id;
            testAnswer.TestQuestionID = testQuestionID;
            testAnswer.OrdinalNumber = ordinalNumber;
            testAnswer.Text = text;
            return testAnswer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestQuestionID
        {
            get
            {
                return _TestQuestionID;
            }
            set
            {
                OnTestQuestionIDChanging(value);
                ReportPropertyChanging("TestQuestionID");
                _TestQuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestQuestionID");
                OnTestQuestionIDChanged();
            }
        }
        private global::System.Int32 _TestQuestionID;
        partial void OnTestQuestionIDChanging(global::System.Int32 value);
        partial void OnTestQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AnswerID
        {
            get
            {
                return _AnswerID;
            }
            set
            {
                OnAnswerIDChanging(value);
                ReportPropertyChanging("AnswerID");
                _AnswerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AnswerID");
                OnAnswerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AnswerID;
        partial void OnAnswerIDChanging(Nullable<global::System.Int32> value);
        partial void OnAnswerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrdinalNumber
        {
            get
            {
                return _OrdinalNumber;
            }
            set
            {
                OnOrdinalNumberChanging(value);
                ReportPropertyChanging("OrdinalNumber");
                _OrdinalNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrdinalNumber");
                OnOrdinalNumberChanged();
            }
        }
        private global::System.Int32 _OrdinalNumber;
        partial void OnOrdinalNumberChanging(global::System.Int32 value);
        partial void OnOrdinalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_Answers", "Answers")]
        public Answer Answer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "Answers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "Answers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Answer> AnswerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Answer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "Answers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Answer>("ScientiaPotentiaEstModel.FK_TestAnswers_Answers", "Answers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_TestQuestions", "TestQuestions")]
        public TestQuestion TestQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestQuestion>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestQuestions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestQuestion>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestQuestions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestQuestion> TestQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestQuestion>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestQuestions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestQuestion>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestQuestions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="TestQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestQuestion object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="testID">Initial value of the TestID property.</param>
        /// <param name="questionID">Initial value of the QuestionID property.</param>
        /// <param name="ordinalNumber">Initial value of the OrdinalNumber property.</param>
        public static TestQuestion CreateTestQuestion(global::System.Int32 id, global::System.Int32 testID, global::System.Int32 questionID, global::System.Int32 ordinalNumber)
        {
            TestQuestion testQuestion = new TestQuestion();
            testQuestion.ID = id;
            testQuestion.TestID = testID;
            testQuestion.QuestionID = questionID;
            testQuestion.OrdinalNumber = ordinalNumber;
            return testQuestion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TestID
        {
            get
            {
                return _TestID;
            }
            set
            {
                OnTestIDChanging(value);
                ReportPropertyChanging("TestID");
                _TestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestID");
                OnTestIDChanged();
            }
        }
        private global::System.Int32 _TestID;
        partial void OnTestIDChanging(global::System.Int32 value);
        partial void OnTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 QuestionID
        {
            get
            {
                return _QuestionID;
            }
            set
            {
                OnQuestionIDChanging(value);
                ReportPropertyChanging("QuestionID");
                _QuestionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuestionID");
                OnQuestionIDChanged();
            }
        }
        private global::System.Int32 _QuestionID;
        partial void OnQuestionIDChanging(global::System.Int32 value);
        partial void OnQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrdinalNumber
        {
            get
            {
                return _OrdinalNumber;
            }
            set
            {
                OnOrdinalNumberChanging(value);
                ReportPropertyChanging("OrdinalNumber");
                _OrdinalNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrdinalNumber");
                OnOrdinalNumberChanged();
            }
        }
        private global::System.Int32 _OrdinalNumber;
        partial void OnOrdinalNumberChanging(global::System.Int32 value);
        partial void OnOrdinalNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Questions", "Questions")]
        public Question Question
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "Questions").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "Questions").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Question> QuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Question>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "Questions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Question>("ScientiaPotentiaEstModel.FK_TestQuestions_Questions", "Questions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestAnswers_TestQuestions", "TestAnswers")]
        public EntityCollection<TestAnswer> TestAnswers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestAnswer>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestAnswers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestAnswer>("ScientiaPotentiaEstModel.FK_TestAnswers_TestQuestions", "TestAnswers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_TestQuestions_Tests", "Tests")]
        public Test Test
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "Tests").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "Tests").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Test> TestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Test>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "Tests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Test>("ScientiaPotentiaEstModel.FK_TestQuestions_Tests", "Tests", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ScientiaPotentiaEstModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="canceledMark">Initial value of the CanceledMark property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="middleName">Initial value of the MiddleName property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String userName, global::System.String password, global::System.String email, global::System.Int32 canceledMark, global::System.String firstName, global::System.String lastName, global::System.String middleName)
        {
            User user = new User();
            user.ID = id;
            user.UserName = userName;
            user.Password = password;
            user.Email = email;
            user.CanceledMark = canceledMark;
            user.FirstName = firstName;
            user.LastName = lastName;
            user.MiddleName = middleName;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CanceledMark
        {
            get
            {
                return _CanceledMark;
            }
            set
            {
                OnCanceledMarkChanging(value);
                ReportPropertyChanging("CanceledMark");
                _CanceledMark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CanceledMark");
                OnCanceledMarkChanged();
            }
        }
        private global::System.Int32 _CanceledMark;
        partial void OnCanceledMarkChanging(global::System.Int32 value);
        partial void OnCanceledMarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupID;
        partial void OnGroupIDChanging(Nullable<global::System.Int32> value);
        partial void OnGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Assign_Users", "Assign")]
        public EntityCollection<Assign> Assigns
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Users", "Assign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assign>("ScientiaPotentiaEstModel.FK_Assign_Users", "Assign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Users_Groups", "Groups")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Users_Groups", "Groups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Users_Groups", "Groups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Users_Groups", "Groups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("ScientiaPotentiaEstModel.FK_Users_Groups", "Groups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Student", "Tests")]
        public EntityCollection<Test> TestsAsStudent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Student", "Tests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Student", "Tests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "FK_Tests_Teacher", "Tests")]
        public EntityCollection<Test> TestsAsTeacher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Tests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Test>("ScientiaPotentiaEstModel.FK_Tests_Teacher", "Tests", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ScientiaPotentiaEstModel", "UsersRoles", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("ScientiaPotentiaEstModel.UsersRoles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("ScientiaPotentiaEstModel.UsersRoles", "Roles", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
